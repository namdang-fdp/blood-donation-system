on:
  workflow_dispatch:
  push:
    branches: main
  pull_request:
    branches: main

permissions:
  contents: read

jobs:
  eslint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v4
      - name: Install bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Check types
        run: bun run check-types
      - name: Lint
        run: bun run lint

  clippy-fmt:
    name: Check Clippy and rustfmt
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            backend
      - name: Check Clippy
        run: cargo clippy --all-features --workspace -- -D warnings
      - name: Check rustfmt
        run: cargo fmt --all -- --check

  test:
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./backend
    env:
      PGHOST: localhost
      PGDATABASE: ${{ secrets.PG_DB }}
      PGUSERNAME: ${{ secrets.PG_USER }}
      PGPASSWORD: ${{ secrets.PG_PASS }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            toolchain: stable
    steps:
      - uses: actions/checkout@v4
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          target: ${{ matrix.target }}
          toolchain: ${{ matrix.toolchain }}
      - name: Install redis
        run: sudo apt-get install -y redis-tools redis-server
      - uses: ikalnytskyi/action-setup-postgres@v7
        id: postgres
      - name: Init database
        run: psql ${{ steps.postgres.outputs.connection-uri }} -a -f schema.sql
      - name: Verify that redis is up
        run: redis-cli ping
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: |
            backend
      - name: Test
        env:
          DATABASE_URL: postgres://${{ secrets.PG_USER }}:${{ secrets.PG_PASS }}@database/${{ secrets.PG_DB }}

          BCRYPT__COST: ${{ secrets.BCRYPT_COST }}
          BCRYPT__SALT: ${{ secrets.BCRYPT_SALT }}

          EMAIL__USERNAME: ${{ secrets.EMAIL_USERNAME }}
          EMAIL__PASSWORD: ${{ secrets.EMAIL_PASSWORD }}

          JWT__SECRET: ${{ secrets.JWT_SECRET }}
          JWT__EXPIRED_IN: ${{ secrets.JWT_EXPIRED_IN }}

          REDIS__PASSWORD: ${{ secrets.REDIS_PASSWORD }}
          REDIS__HOST: localhost

          OIDC__LOGIN_REDIRECT: ${{ secrets.OIDC_LOGIN_REDIRECT }}
          OIDC__REGISTER_REDIRECT: ${{ secrets.OIDC_REGISTER_REDIRECT }}
          OIDC__CLIENTS__GOOGLE__CLIENT_ID: ${{ secrets.GOOGLE_CLIENT_ID }}
          OIDC__CLIENTS__GOOGLE__CLIENT_SECRET: ${{ secrets.GOOGLE_CLIENT_SECRET }}
          OIDC__CLIENTS__GOOGLE__ISSUER_URL: ${{ secrets.GOOGLE_ISSUER_URL }}
          OIDC__CLIENTS__GOOGLE__REDIRECT_URL: ${{ secrets.GOOGLE_REDIRECT_URL }}
          OIDC__CLIENTS__MICROSOFT__CLIENT_ID: ${{ secrets.MICROSOFT_CLIENT_ID }}
          OIDC__CLIENTS__MICROSOFT__CLIENT_SECRET: ${{ secrets.MICROSOFT_CLIENT_SECRET }}
          OIDC__CLIENTS__MICROSOFT__ISSUER_URL: ${{ secrets.MICROSOFT_ISSUER_URL }}
          OIDC__CLIENTS__MICROSOFT__REDIRECT_URL: ${{ secrets.MICROSOFT_REDIRECT_URL }}

          RAG__QDRANT_URL: ${{ secrets.QDRANT_URL }}
          RAG__GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          RAG__CONTEXT_SAMPLE: ${{ secrets.RAG_CONTEXT_SAMPLE }}
        run: |
          cargo test --target ${{ matrix.target }}
